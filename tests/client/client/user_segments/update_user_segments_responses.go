// Code generated by go-swagger; DO NOT EDIT.

package user_segments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/lyuvolkova/avitoTest-dynSeg/tests/client/models"
)

// UpdateUserSegmentsReader is a Reader for the UpdateUserSegments structure.
type UpdateUserSegmentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateUserSegmentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateUserSegmentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewUpdateUserSegmentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /users/{userID}/segments] updateUserSegments", response, response.Code())
	}
}

// NewUpdateUserSegmentsOK creates a UpdateUserSegmentsOK with default headers values
func NewUpdateUserSegmentsOK() *UpdateUserSegmentsOK {
	return &UpdateUserSegmentsOK{}
}

/*
UpdateUserSegmentsOK describes a response with status code 200, with default header values.

UpdateUserSegmentsOK update user segments o k
*/
type UpdateUserSegmentsOK struct {
	Payload *models.UpdateUserSegmentsResponse
}

// IsSuccess returns true when this update user segments o k response has a 2xx status code
func (o *UpdateUserSegmentsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update user segments o k response has a 3xx status code
func (o *UpdateUserSegmentsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user segments o k response has a 4xx status code
func (o *UpdateUserSegmentsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update user segments o k response has a 5xx status code
func (o *UpdateUserSegmentsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update user segments o k response a status code equal to that given
func (o *UpdateUserSegmentsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update user segments o k response
func (o *UpdateUserSegmentsOK) Code() int {
	return 200
}

func (o *UpdateUserSegmentsOK) Error() string {
	return fmt.Sprintf("[PATCH /users/{userID}/segments][%d] updateUserSegmentsOK  %+v", 200, o.Payload)
}

func (o *UpdateUserSegmentsOK) String() string {
	return fmt.Sprintf("[PATCH /users/{userID}/segments][%d] updateUserSegmentsOK  %+v", 200, o.Payload)
}

func (o *UpdateUserSegmentsOK) GetPayload() *models.UpdateUserSegmentsResponse {
	return o.Payload
}

func (o *UpdateUserSegmentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpdateUserSegmentsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserSegmentsInternalServerError creates a UpdateUserSegmentsInternalServerError with default headers values
func NewUpdateUserSegmentsInternalServerError() *UpdateUserSegmentsInternalServerError {
	return &UpdateUserSegmentsInternalServerError{}
}

/*
UpdateUserSegmentsInternalServerError describes a response with status code 500, with default header values.

UpdateUserSegmentsInternalServerError update user segments internal server error
*/
type UpdateUserSegmentsInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this update user segments internal server error response has a 2xx status code
func (o *UpdateUserSegmentsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update user segments internal server error response has a 3xx status code
func (o *UpdateUserSegmentsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user segments internal server error response has a 4xx status code
func (o *UpdateUserSegmentsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update user segments internal server error response has a 5xx status code
func (o *UpdateUserSegmentsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update user segments internal server error response a status code equal to that given
func (o *UpdateUserSegmentsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update user segments internal server error response
func (o *UpdateUserSegmentsInternalServerError) Code() int {
	return 500
}

func (o *UpdateUserSegmentsInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /users/{userID}/segments][%d] updateUserSegmentsInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateUserSegmentsInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /users/{userID}/segments][%d] updateUserSegmentsInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateUserSegmentsInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateUserSegmentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
